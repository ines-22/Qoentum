package com.sfm.qoentum.service.qoentumm.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.sfm.qoentum.dao.qoentumm.SystemeExploitationDao;
import com.sfm.qoentum.dto.EntityPage;
import com.sfm.qoentum.dto.PageUtil;
import com.sfm.qoentum.model.qoentumm.SystemeExploitation;
import com.sfm.qoentum.service.qoentumm.SystemeExploitationService;


@Service(value = "systemeExploitationService")
public class SystemeExploitationServiceImpl implements SystemeExploitationService {
	
	@Autowired
	private SystemeExploitationDao systemeExploitationDao;

	@Override
	public SystemeExploitation save(SystemeExploitation systemeExploitation) {
		return systemeExploitationDao.save(systemeExploitation);
	}

	@Override
	public List<SystemeExploitation> findAll() {
		List<SystemeExploitation> list = new ArrayList<>();
		systemeExploitationDao.findAll().iterator().forEachRemaining(list::add);
		return list;
	}

	@Override
	public void delete(long id) {
		systemeExploitationDao.deleteById(id);
		
	}

	@Override
	public SystemeExploitation findById(Long id) {
		return systemeExploitationDao.findById(id).get();
	}
	
	@Override
	public long count() {
		return systemeExploitationDao.count();
	}
	
	@Override
	public EntityPage<SystemeExploitation> findByNomContaining(String nom, Pageable pageable) {
		
		Page<SystemeExploitation> systemeExploitationsPage = systemeExploitationDao.findByNomContaining(nom, pageable);
		
		EntityPage<SystemeExploitation> systemeExploitations = new EntityPage<SystemeExploitation>();
		
		systemeExploitations.setList(systemeExploitationsPage.getContent());
		
		PageUtil pageUtil = new PageUtil();
		pageUtil.setNombreElementParPage(systemeExploitationsPage.getNumberOfElements());
		pageUtil.setNombrePage(systemeExploitationsPage.getTotalPages());
		pageUtil.setNumeroPage(systemeExploitationsPage.getNumber() + 1);
		pageUtil.setNombreTotalElement(systemeExploitationsPage.getTotalElements());
		
		systemeExploitations.setPageUtil(pageUtil);
		
		return systemeExploitations;
	}
	
	@Override
	public SystemeExploitation findByNom(String nom) {
		return systemeExploitationDao.findByNom(nom);
	}
	
	@Override
	public boolean existsSystemeExploitationByNom(String nom, Long id) {
		if(id==0) {
			return systemeExploitationDao.existsSystemeExploitationByNom(nom);
		} else {
			return systemeExploitationDao.existsSystemeExploitationByNomAndIdIsNot(nom, id);
		}
	}
}
